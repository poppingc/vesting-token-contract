/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Token,
  TokenInterface,
} from "../../../contracts/VestingToken.1.sol/Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_initMint",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenVestingRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_totalLockAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_firstRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cliff",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_releaseCount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_customizeRatio",
        type: "uint256[]",
      },
      {
        internalType: "bool",
        name: "_revocable",
        type: "bool",
      },
    ],
    name: "createVesting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
    ],
    name: "endReleaseTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
    ],
    name: "nextReleaseAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
    ],
    name: "nextReleaseTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
    ],
    name: "nowReleaseAllAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
    ],
    name: "revoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
    ],
    name: "unReleaseAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620023e1380380620023e18339810160408190526200003491620003a7565b8151829082906200004d90600390602085019062000234565b5080516200006390600490602084019062000234565b505050620000806200007a620000f960201b60201c565b620000fd565b8315620000e35783831115620000dd5760405162461bcd60e51b815260206004820152601760248201527f546f6b656e3a204e6f7420657863656564206c696d697400000000000000000060448201526064015b60405180910390fd5b60078490555b620000ef33846200014f565b5050505062000489565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001a75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401620000d4565b8060026000828254620001bb919062000425565b90915550506001600160a01b03821660009081526020819052604081208054839290620001ea90849062000425565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b82805462000242906200044c565b90600052602060002090601f016020900481019282620002665760008555620002b1565b82601f106200028157805160ff1916838001178555620002b1565b82800160010185558215620002b1579182015b82811115620002b157825182559160200191906001019062000294565b50620002bf929150620002c3565b5090565b5b80821115620002bf5760008155600101620002c4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200030257600080fd5b81516001600160401b03808211156200031f576200031f620002da565b604051601f8301601f19908116603f011681019082821181831017156200034a576200034a620002da565b816040528381526020925086838588010111156200036757600080fd5b600091505b838210156200038b57858201830151818301840152908201906200036c565b838211156200039d5760008385830101525b9695505050505050565b60008060008060808587031215620003be57600080fd5b84516020860151604087015191955093506001600160401b0380821115620003e557600080fd5b620003f388838901620002f0565b935060608701519150808211156200040a57600080fd5b506200041987828801620002f0565b91505092959194509250565b600082198211156200044757634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200046157607f821691505b602082108114156200048357634e487b7160e01b600052602260045260246000fd5b50919050565b611f4880620004996000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c806370a08231116100de57806395d89b4111610097578063a9059cbb11610071578063a9059cbb1461034f578063b4bc1aa714610362578063dd62ed3e14610375578063f2fde38b1461038857600080fd5b806395d89b411461032b578063a36298c714610333578063a457c2d71461033c57600080fd5b806370a08231146102a6578063715018a6146102cf57806372f5d991146102d757806374a8f103146102ea57806379cc6790146102fd5780638da5cb5b1461031057600080fd5b806323b872dd1161014b5780633950935111610125578063395093511461025a57806340c10f191461026d57806342966c68146102805780635bc7059a1461029357600080fd5b806323b872dd14610225578063313ce5671461023857806333e506b81461024757600080fd5b806306fdde0314610193578063095ea7b3146101b15780630edeef4c146101d457806315d3f876146101f557806318160ddd146102085780631916558714610210575b600080fd5b61019b61039b565b6040516101a89190611afa565b60405180910390f35b6101c46101bf366004611b66565b61042d565b60405190151581526020016101a8565b6101e76101e2366004611b90565b61049d565b6040519081526020016101a8565b6101e7610203366004611b90565b610544565b6002546101e7565b61022361021e366004611b90565b61059a565b005b6101c4610233366004611bab565b61079c565b604051601281526020016101a8565b6101e7610255366004611b90565b61080f565b6101c4610268366004611b66565b610930565b61022361027b366004611b66565b61095c565b61022361028e366004611be7565b610a1b565b6101e76102a1366004611b90565b610a72565b6101e76102b4366004611b90565b6001600160a01b031660009081526020819052604090205490565b610223610ba6565b6101e76102e5366004611b90565b610bdc565b6102236102f8366004611b90565b610c09565b61022361030b366004611b66565b610db9565b6005546040516001600160a01b0390911681526020016101a8565b61019b610e21565b6101e760075481565b6101c461034a366004611b66565b610e30565b6101c461035d366004611b66565b610eb6565b610223610370366004611c26565b610f11565b6101e7610383366004611d2e565b6112a3565b610223610396366004611b90565b6112ce565b6060600380546103aa90611d61565b80601f01602080910402602001604051908101604052809291908181526020018280546103d690611d61565b80156104235780601f106103f857610100808354040283529160200191610423565b820191906000526020600020905b81548152906001019060200180831161040657829003601f168201915b5050505050905090565b6000338261043a82610bdc565b6001600160a01b03831660009081526020819052604090205461045d9190611dac565b8111156104855760405162461bcd60e51b815260040161047c90611dc3565b60405180910390fd5b33610491818787611369565b50600195945050505050565b6001600160a01b03811660009081526006602052604081206001810154905482916104c791611e0f565b6001600160a01b0384166000908152600660205260408120600101549192509082906104f28661148d565b6104fc9190611e27565b6105069190611e0f565b905061051184610544565b81101580610527575061052384610544565b4210155b1561053d5761053584610544565b949350505050565b9392505050565b6001600160a01b038116600090815260066020526040812060028101546001909101546105719190611e27565b6001600160a01b0383166000908152600660205260409020546105949190611e0f565b92915050565b6001600160a01b03811660009081526006602052604090205481906105d15760405162461bcd60e51b815260040161047c90611e46565b6001600160a01b038216600090815260066020526040902060070154610100900460ff16156106505760405162461bcd60e51b815260206004820152602560248201527f546f6b656e56657374696e673a20416d6f756e7420686173206265656e2072656044820152641d9bdad95960da1b606482015260840161047c565b600061065b83610bdc565b116106a85760405162461bcd60e51b815260206004820152601d60248201527f546f6b656e56657374696e673a2056657374696e6720697320646f6e65000000604482015260640161047c565b60006106b383610a72565b9050600081116107055760405162461bcd60e51b815260206004820152601f60248201527f546f6b656e56657374696e673a204e6f20746f6b656e73206172652064756500604482015260640161047c565b6001600160a01b038316600090815260066020526040812060038101805491928492610732908490611e0f565b9091555061075490508461074e6005546001600160a01b031690565b846114c0565b604080516001600160a01b0386168152602081018490527fc7798891864187665ac6dd119286e44ec13f014527aeeb2b8eb3fd413df93179910160405180910390a150505050565b600083826107a982610bdc565b6001600160a01b0383166000908152602081905260409020546107cc9190611dac565b8111156107eb5760405162461bcd60e51b815260040161047c90611dc3565b336107f78782876114c0565b610802878787611534565b5060019695505050505050565b600061081a82610544565b421061082857506000919050565b6001600160a01b03821660009081526006602052604090206004015461084d83610bdc565b14801561087457506001600160a01b03821660009081526006602052604090206005015415155b156108825761059482611702565b61088b82610544565b6108948361049d565b106108ee576001600160a01b0382166000908152600660205260409020600301546108be83610a72565b6001600160a01b0384166000908152600660205260409020600401546108e49190611dac565b6105949190611e0f565b6001600160a01b0382166000908152600660208190526040909120015415610922576105948261091d84611731565b611763565b610594826117d0565b919050565b60003361095281858561094383836112a3565b61094d9190611e0f565b611369565b5060019392505050565b6005546001600160a01b031633146109865760405162461bcd60e51b815260040161047c90611e8a565b600754819015610a0c576007548161099d60025490565b6109a79190611e0f565b1115610a0c5760405162461bcd60e51b815260206004820152602e60248201527f546f6b656e3a20546865206d696e7420746f74616c20616d6f756e742065786360448201526d1959591cc81d1a19481b1a5b5a5d60921b606482015260840161047c565b610a16838361181b565b505050565b3381610a2682610bdc565b6001600160a01b038316600090815260208190526040902054610a499190611dac565b811115610a685760405162461bcd60e51b815260040161047c90611dc3565b610a1633846118fa565b600080610a7e83611702565b6001600160a01b038416600090815260066020526040902060018101549054919250610aa991611e0f565b421015610ad6576001600160a01b03831660009081526006602052604090206003015461053d9082611dac565b610adf83610544565b4210610aee5761053d83610bdc565b6001600160a01b0383166000908152600660208190526040909120015415610b515760005b610b1c8461148d565b811015610b4b57610b2d8482611763565b610b379083611e0f565b915080610b4381611ebf565b915050610b13565b50610b7a565b610b5a8361148d565b610b63846117d0565b610b6d9190611e27565b610b779082611e0f565b90505b6001600160a01b03831660009081526006602052604090206003015461053d9082611dac565b50919050565b6005546001600160a01b03163314610bd05760405162461bcd60e51b815260040161047c90611e8a565b610bda6000611a48565b565b6001600160a01b038116600090815260066020526040812060038101546004909101546105949190611dac565b6005546001600160a01b03163314610c335760405162461bcd60e51b815260040161047c90611e8a565b6001600160a01b0381166000908152600660205260409020548190610c6a5760405162461bcd60e51b815260040161047c90611e46565b6001600160a01b0382166000908152600660205260409020600781015460ff16610cd65760405162461bcd60e51b815260206004820152601b60248201527f546f6b656e56657374696e673a2063616e6e6f74207265766f6b650000000000604482015260640161047c565b6007810154610100900460ff1615610d3c5760405162461bcd60e51b815260206004820152602360248201527f546f6b656e56657374696e673a20746f6b656e20616c7265616479207265766f6044820152621ad95960ea1b606482015260840161047c565b60078101805461ff001916610100179055610d7783610d636005546001600160a01b031690565b836003015484600401546102339190611dac565b506040516001600160a01b03841681527f39983c6d4d174a7aee564f449d4a5c3c7ac9649d72b7793c56901183996f8af69060200160405180910390a1505050565b8181610dc482610bdc565b6001600160a01b038316600090815260208190526040902054610de79190611dac565b811115610e065760405162461bcd60e51b815260040161047c90611dc3565b610e118433856114c0565b610e1b84846118fa565b50505050565b6060600480546103aa90611d61565b60003381610e3e82866112a3565b905083811015610e9e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161047c565b610eab8286868403611369565b506001949350505050565b60003382610ec382610bdc565b6001600160a01b038316600090815260208190526040902054610ee69190611dac565b811115610f055760405162461bcd60e51b815260040161047c90611dc3565b33610491818787611534565b6005546001600160a01b03163314610f3b5760405162461bcd60e51b815260040161047c90611e8a565b6001600160a01b038716610fa75760405162461bcd60e51b815260206004820152602d60248201527f546f6b656e56657374696e673a2062656e65666963696172792069732074686560448201526c207a65726f206164647265737360981b606482015260840161047c565b60008311610ff75760405162461bcd60e51b815260206004820181905260248201527f546f6b656e56657374696e673a2052656c6561736520636f756e742069732030604482015260640161047c565b60648511156110575760405162461bcd60e51b815260206004820152602660248201527f546f6b656e56657374696e673a204e6f206d6f7265207468616e206f6e6520686044820152651d5b991c995960d21b606482015260840161047c565b81511561117f57815183146110cc5760405162461bcd60e51b815260206004820152603560248201527f546f6b656e56657374696e673a20556e6c6f636b2074696d657320616e6420746044820152741a5b5948191bc81b9bdd0818dbdc9c995cdc1bdb99605a1b606482015260840161047c565b6000805b8351811015611112578381815181106110eb576110eb611eda565b6020026020010151826110fe9190611e0f565b91508061110a81611ebf565b9150506110d0565b5061111d8682611e0f565b60641461117d5760405162461bcd60e51b815260206004820152602860248201527f546f6b656e56657374696e673a2054686520526174696f20746f74616c2069736044820152670206e6f74203130360c41b606482015260840161047c565b505b6040518061012001604052804281526020018581526020018481526020016000815260200187815260200186815260200183815260200182151581526020016000151581525060066000896001600160a01b03166001600160a01b03168152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006019080519060200190611242929190611a9a565b5060e082015160079190910180546101009384015161ffff1990911692151561ff0019169290921791151590920217905561127d8787610eb6565b5061129a876112946005546001600160a01b031690565b88611369565b50505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546001600160a01b031633146112f85760405162461bcd60e51b815260040161047c90611e8a565b6001600160a01b03811661135d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161047c565b61136681611a48565b50565b6001600160a01b0383166113cb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161047c565b6001600160a01b03821661142c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161047c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0381166000908152600660205260408120600181015490546114b69042611dac565b6105949190611ef0565b60006114cc84846112a3565b90506000198114610e1b57818110156115275760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161047c565b610e1b8484848403611369565b6001600160a01b0383166115985760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161047c565b6001600160a01b0382166115fa5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161047c565b6001600160a01b038316600090815260208190526040902054818110156116725760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161047c565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906116a9908490611e0f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516116f591815260200190565b60405180910390a3610e1b565b6001600160a01b038116600090815260066020526040812060058101546004909101546064916114b691611e27565b6001600160a01b0381166000908152600660205260408120600181015490546117598461049d565b6114b69190611dac565b6001600160a01b03821660009081526006602081905260408220018054606491908490811061179457611794611eda565b60009182526020808320909101546001600160a01b038716835260069091526040909120600401546117c69190611e27565b61053d9190611ef0565b6001600160a01b0381166000908152600660205260408120600201546117f583611702565b6001600160a01b0384166000908152600660205260409020600401546114b69190611dac565b6001600160a01b0382166118715760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161047c565b80600260008282546118839190611e0f565b90915550506001600160a01b038216600090815260208190526040812080548392906118b0908490611e0f565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03821661195a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161047c565b6001600160a01b038216600090815260208190526040902054818110156119ce5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161047c565b6001600160a01b03831660009081526020819052604081208383039055600280548492906119fd908490611dac565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054828255906000526020600020908101928215611ad5579160200282015b82811115611ad5578251825591602001919060010190611aba565b50611ae1929150611ae5565b5090565b5b80821115611ae15760008155600101611ae6565b600060208083528351808285015260005b81811015611b2757858101830151858201604001528201611b0b565b81811115611b39576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461092b57600080fd5b60008060408385031215611b7957600080fd5b611b8283611b4f565b946020939093013593505050565b600060208284031215611ba257600080fd5b61053d82611b4f565b600080600060608486031215611bc057600080fd5b611bc984611b4f565b9250611bd760208501611b4f565b9150604084013590509250925092565b600060208284031215611bf957600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b8035801515811461092b57600080fd5b600080600080600080600060e0888a031215611c4157600080fd5b611c4a88611b4f565b9650602080890135965060408901359550606089013594506080890135935060a089013567ffffffffffffffff80821115611c8457600080fd5b818b0191508b601f830112611c9857600080fd5b813581811115611caa57611caa611c00565b8060051b604051601f19603f83011681018181108582111715611ccf57611ccf611c00565b60405291825284820192508381018501918e831115611ced57600080fd5b938501935b82851015611d0b57843584529385019392850192611cf2565b809750505050505050611d2060c08901611c16565b905092959891949750929550565b60008060408385031215611d4157600080fd5b611d4a83611b4f565b9150611d5860208401611b4f565b90509250929050565b600181811c90821680611d7557607f821691505b60208210811415610ba057634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082821015611dbe57611dbe611d96565b500390565b6020808252602c908201527f546f6b656e56657374696e673a20496e73756666696369656e7420617661696c60408201526b61626c652062616c616e636560a01b606082015260800190565b60008219821115611e2257611e22611d96565b500190565b6000816000190483118215151615611e4157611e41611d96565b500290565b60208082526024908201527f546f6b656e56657374696e673a2042656e6566696369617279206e6f2076657360408201526374696e6760e01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000600019821415611ed357611ed3611d96565b5060010190565b634e487b7160e01b600052603260045260246000fd5b600082611f0d57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220842970ffc8525595f9bde75ef2ee58c0673c700a0260a0aa3bdc672f302c12cf64736f6c63430008090033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _totalLimit: BigNumberish,
    _initMint: BigNumberish,
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Token> {
    return super.deploy(
      _totalLimit,
      _initMint,
      _name,
      _symbol,
      overrides || {}
    ) as Promise<Token>;
  }
  override getDeployTransaction(
    _totalLimit: BigNumberish,
    _initMint: BigNumberish,
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _totalLimit,
      _initMint,
      _name,
      _symbol,
      overrides || {}
    );
  }
  override attach(address: string): Token {
    return super.attach(address) as Token;
  }
  override connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
